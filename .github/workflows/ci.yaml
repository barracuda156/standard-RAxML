name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    name: Build on Linux x86_64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        intrinsics: ["", ".SSE3", ".AVX", ".AVX2"]
        type: ["", ".PTHREADS", ".MPI", ".HYBRID", ".QuartetMPI"]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y file openmpi-bin libopenmpi-dev

    - name: Build
      run: |
        set -x
        if [[ -f Makefile${{ matrix.intrinsics }}${{ matrix.type }}.gcc ]]; then
          make -j -f Makefile${{ matrix.intrinsics }}${{ matrix.type }}.gcc all
          file raxmlHPC* | grep x86-64
        fi

  build-aarch64:
    name: Build on Linux aarch64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        intrinsics: ["", ".SSE3"]
        type: ["", ".PTHREADS", ".MPI", ".HYBRID", ".QuartetMPI"]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: aarch64
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        dockerRunArgs: |
          --volume "${PWD}:/raxml"
        install: |
          apt-get update -q -y
          apt-get install -q -y make gcc file openmpi-bin libopenmpi-dev
        run: |
          set -x
          make -j -f Makefile${{ matrix.intrinsics }}${{ matrix.type }}.gcc all
          file raxmlHPC* | grep aarch64
